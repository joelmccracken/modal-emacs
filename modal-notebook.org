* list of todos
** TODO fix `me--andand` to produce sexps bc of byte complication
   <JoelMcCracken> is there a compelling reason to have a macro produce a sexp
   instead of evaling said sexp itself?
   <SamB> JoelMcCracken: byte compilation                                  [01:50]
   <JoelMcCracken> oh
   <JoelMcCracken> compelling
** DONE fix broken default mode selection
** TODO renaming insert mode to conventional
** TODO rename normal to command (because normal-mode is something in emacs)
** TODO add a `?` binding to describe the current mode
** TODO decide on other visual indicators for current mode
** TODO integrate discover.el
* <2013-04-13 Sat>--<2013-04-14 Sun>
** worked on readme, notebook
* <2013-04-10 Wed>
** user testing check
*** default mode is wrong
**** after trying, remember that the last thing i ended on was testing default mode selection
**** now fixed
*** once into normal mode, switching to insert doesnt work
** still need to figure out a better way to handle normal mode conversion
*** ideas:
**** rapidly hitting a rare sequence -- qq -- to do it ?
**** another sequence -- a C-<any> thing -- to switch modes?
***** M-SPC? C-SPC
* <2013-04-09 Tue>
** implemented me--andand macro
*** cool idea, but really not useful -- plist-get does what I was trying to do
**** keeping it in project anyway.
** changing the function to be "me--" for private modal emacs symbols
*** #emacs sanity check said this probably this wouldnt conflict with any other packages
** note about `modal--other-window-or-self-insert`
*** have been worried about accessing keymap to do "original" command
*** having thought of/tried it, this should work:
    (let ((emulation-mode-map-alists nil))
      (key-binding (this-command-keys)))

    this should give us the command that we want to "defer" to
* <2013-04-07 Sun>
** code cleanup/regrouping
*** adding tests -- doing pseudo tdd
*** began integrating eieio as object system
** added a ton of tests
*** testing out a new style of writing emacs tests
**** a macro `modal-test` which handles defining a test in modal-emacs style
**** tests can be run immediately if a flag is set (thus easy to eval flags)
**** a single wrapping sexp per test
* <2013-04-06 Sat>
  starting point: 66d7c82b7183d2ac361f8aea1b8a097a63e0b74f
